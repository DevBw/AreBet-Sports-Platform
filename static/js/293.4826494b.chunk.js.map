{"version":3,"file":"static/js/293.4826494b.chunk.js","mappings":"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","sources":["features/table/Table.js"],"sourcesContent":["// ===============================================\r\n// TABLE PAGE COMPONENT\r\n// League standings and table view\r\n// ===============================================\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { useAuth } from '../../shared/hooks/useAuth'\r\nimport { areBetService } from '../../shared/services/SupabaseServiceV2'\r\nimport { \r\n  Header,\r\n  Card, \r\n  LoadingSpinner,\r\n  BackgroundWrapper,\r\n  PremiumGate\r\n} from '../../shared/components'\r\n\r\nconst Table = () => {\r\n  const { isPremium } = useAuth()\r\n  const [standings, setStandings] = useState([])\r\n  const [leagues, setLeagues] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [selectedLeague, setSelectedLeague] = useState('')\r\n  const [selectedSeason, setSelectedSeason] = useState('2024')\r\n\r\n  const loadLeagues = useCallback(async () => {\r\n    try {\r\n      const leaguesResponse = await areBetService.getLeagues({ limit: 20 })\r\n      if (leaguesResponse?.response) {\r\n        setLeagues(leaguesResponse.response)\r\n        // Auto-select first league\r\n        if (leaguesResponse.response.length > 0 && !selectedLeague) {\r\n          setSelectedLeague(leaguesResponse.response[0].league.id.toString())\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading leagues:', err)\r\n    }\r\n  }, [selectedLeague])\r\n\r\n  const loadStandings = useCallback(async () => {\r\n    if (!selectedLeague) return\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const standingsResponse = await areBetService.getStandings({\r\n        league: parseInt(selectedLeague),\r\n        season: parseInt(selectedSeason)\r\n      })\r\n\r\n      if (standingsResponse?.response?.[0]?.league?.standings?.[0]) {\r\n        setStandings(standingsResponse.response[0].league.standings[0])\r\n      } else {\r\n        setStandings([])\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading standings:', err)\r\n      setError('Failed to load standings')\r\n      setStandings([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [selectedLeague, selectedSeason])\r\n\r\n  useEffect(() => {\r\n    loadLeagues()\r\n  }, [loadLeagues])\r\n\r\n  useEffect(() => {\r\n    if (selectedLeague) {\r\n      loadStandings()\r\n    }\r\n  }, [loadStandings, selectedLeague])\r\n\r\n  const handleLeagueChange = (e) => {\r\n    setSelectedLeague(e.target.value)\r\n  }\r\n\r\n  const handleSeasonChange = (e) => {\r\n    setSelectedSeason(e.target.value)\r\n  }\r\n\r\n  const getPositionStyle = (position) => {\r\n    if (position <= 4) return 'text-green-400' // Champions League\r\n    if (position <= 6) return 'text-blue-400' // Europa League\r\n    if (position >= 18) return 'text-red-400' // Relegation\r\n    return 'text-visible'\r\n  }\r\n\r\n  const getFormStyle = (form) => {\r\n    if (!form) return ''\r\n    const wins = (form.match(/W/g) || []).length\r\n    const losses = (form.match(/L/g) || []).length\r\n    if (wins > losses) return 'text-green-400'\r\n    if (losses > wins) return 'text-red-400'\r\n    return 'text-yellow-400'\r\n  }\r\n\r\n  return (\r\n    <BackgroundWrapper>\r\n      <Header />\r\n      <main className=\"min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto px-3 sm:px-4 lg:px-6 py-4\">\r\n          {/* Header */}\r\n          <div className=\"mb-6\">\r\n            <h1 className=\"text-2xl font-bold text-visible-strong mb-2\">League Tables</h1>\r\n            <p className=\"text-visible\">View current league standings and team statistics</p>\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <Card className=\"mb-6 p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              {/* League Filter */}\r\n              <select\r\n                value={selectedLeague}\r\n                onChange={handleLeagueChange}\r\n                className=\"px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:outline-none text-visible\"\r\n              >\r\n                <option value=\"\">Select League</option>\r\n                {leagues.map(league => (\r\n                  <option key={league.league.id} value={league.league.id.toString()}>\r\n                    {league.league.name} ({league.country.name})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {/* Season Filter */}\r\n              <select\r\n                value={selectedSeason}\r\n                onChange={handleSeasonChange}\r\n                className=\"px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:outline-none text-visible\"\r\n              >\r\n                <option value=\"2024\">2024</option>\r\n                <option value=\"2023\">2023</option>\r\n                <option value=\"2022\">2022</option>\r\n              </select>\r\n\r\n              {/* Team Count */}\r\n              <div className=\"flex items-center text-sm text-visible\">\r\n                {loading ? \"Loading...\" : `${standings.length} teams`}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Content */}\r\n          {loading ? (\r\n            <div className=\"flex justify-center items-center py-12\">\r\n              <LoadingSpinner />\r\n            </div>\r\n          ) : error ? (\r\n            <Card className=\"p-8 text-center\">\r\n              <div className=\"text-red-500 text-visible\">{error}</div>\r\n              <button\r\n                onClick={loadStandings}\r\n                className=\"mt-4 px-4 py-2 bg-yellow-500 text-black rounded-lg hover:bg-yellow-400 transition-colors\"\r\n              >\r\n                Try Again\r\n              </button>\r\n            </Card>\r\n          ) : standings.length === 0 ? (\r\n            <Card className=\"p-8 text-center\">\r\n              <div className=\"text-visible\">No standings available for the selected league and season</div>\r\n            </Card>\r\n          ) : (\r\n            <Card className=\"overflow-hidden\">\r\n              {/* Table Header */}\r\n              <div className=\"bg-gray-800 p-4 border-b border-gray-700\">\r\n                <h2 className=\"text-lg font-bold text-visible-strong\">\r\n                  {leagues.find(l => l.league.id.toString() === selectedLeague)?.league?.name} - {selectedSeason}\r\n                </h2>\r\n              </div>\r\n\r\n              {/* Table */}\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full\">\r\n                  <thead className=\"bg-gray-900\">\r\n                    <tr className=\"border-b border-gray-700\">\r\n                      <th className=\"text-left py-3 px-4 font-semibold text-visible\">#</th>\r\n                      <th className=\"text-left py-3 px-4 font-semibold text-visible\">Team</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">MP</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">W</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">D</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">L</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">GF</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">GA</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">GD</th>\r\n                      <th className=\"text-center py-3 px-2 font-semibold text-visible\">Pts</th>\r\n                      {isPremium && (\r\n                        <th className=\"text-center py-3 px-2 font-semibold text-visible\">Form</th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {standings.map((team, index) => (\r\n                      <tr \r\n                        key={team.team.id}\r\n                        className={`border-b border-gray-700 hover:bg-gray-800 transition-colors ${\r\n                          index % 2 === 0 ? 'bg-gray-900' : 'bg-gray-850'\r\n                        }`}\r\n                      >\r\n                        <td className={`py-3 px-4 font-bold ${getPositionStyle(team.rank)}`}>\r\n                          {team.rank}\r\n                        </td>\r\n                        <td className=\"py-3 px-4\">\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <img\r\n                              src={team.team.logo}\r\n                              alt={team.team.name}\r\n                              className=\"w-6 h-6 object-cover rounded\"\r\n                              onError={(e) => {\r\n                                e.target.src = '/api/placeholder/24/24'\r\n                              }}\r\n                            />\r\n                            <span className=\"text-visible font-medium\">{team.team.name}</span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"py-3 px-2 text-center text-visible\">{team.all.played}</td>\r\n                        <td className=\"py-3 px-2 text-center text-green-400\">{team.all.win}</td>\r\n                        <td className=\"py-3 px-2 text-center text-yellow-400\">{team.all.draw}</td>\r\n                        <td className=\"py-3 px-2 text-center text-red-400\">{team.all.lose}</td>\r\n                        <td className=\"py-3 px-2 text-center text-visible\">{team.all.goals.for}</td>\r\n                        <td className=\"py-3 px-2 text-center text-visible\">{team.all.goals.against}</td>\r\n                        <td className={`py-3 px-2 text-center font-medium ${\r\n                          team.goalsDiff > 0 ? 'text-green-400' : \r\n                          team.goalsDiff < 0 ? 'text-red-400' : 'text-visible'\r\n                        }`}>\r\n                          {team.goalsDiff > 0 ? '+' : ''}{team.goalsDiff}\r\n                        </td>\r\n                        <td className=\"py-3 px-2 text-center font-bold text-yellow-400\">{team.points}</td>\r\n                        {isPremium && (\r\n                          <td className=\"py-3 px-2 text-center\">\r\n                            <PremiumGate feature=\"advanced_stats\" inline>\r\n                              <span className={`font-mono text-xs ${getFormStyle(team.form)}`}>\r\n                                {team.form || 'N/A'}\r\n                              </span>\r\n                            </PremiumGate>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              {/* Legend */}\r\n              <div className=\"bg-gray-800 p-4 border-t border-gray-700\">\r\n                <div className=\"flex flex-wrap items-center space-x-4 text-xs text-visible\">\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <div className=\"w-3 h-3 bg-green-400 rounded-full\"></div>\r\n                    <span>Champions League</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <div className=\"w-3 h-3 bg-blue-400 rounded-full\"></div>\r\n                    <span>Europa League</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <div className=\"w-3 h-3 bg-red-400 rounded-full\"></div>\r\n                    <span>Relegation</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </BackgroundWrapper>\r\n  )\r\n}\r\n\r\nexport default Table"],"names":["Table","_leagues$find","_leagues$find$league","isPremium","useAuth","standings","setStandings","useState","leagues","setLeagues","loading","setLoading","error","setError","selectedLeague","setSelectedLeague","selectedSeason","setSelectedSeason","loadLeagues","useCallback","async","leaguesResponse","areBetService","getLeagues","limit","response","length","league","id","toString","err","console","loadStandings","_standingsResponse$re","_standingsResponse$re2","_standingsResponse$re3","_standingsResponse$re4","standingsResponse","getStandings","parseInt","season","useEffect","getFormStyle","form","wins","match","losses","_jsxs","BackgroundWrapper","children","_jsx","Header","className","Card","value","onChange","e","target","map","name","country","concat","LoadingSpinner","onClick","find","l","team","index","position","rank","src","logo","alt","onError","all","played","win","draw","lose","goals","for","against","goalsDiff","points","PremiumGate","feature","inline"],"sourceRoot":""}