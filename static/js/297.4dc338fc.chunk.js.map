{"version":3,"file":"static/js/297.4dc338fc.chunk.js","mappings":"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","sources":["features/stats/Stats.js"],"sourcesContent":["// ===============================================\r\n// STATS PAGE COMPONENT\r\n// Team and player statistics dashboard\r\n// ===============================================\r\n\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport { useAuth } from '../../shared/hooks/useAuth'\r\nimport { areBetService } from '../../shared/services/SupabaseServiceV2'\r\nimport { \r\n  Header,\r\n  Card, \r\n  LoadingSpinner,\r\n  BackgroundWrapper,\r\n  PremiumGate\r\n} from '../../shared/components'\r\n\r\nconst Stats = () => {\r\n  const { isPremium } = useAuth()\r\n  const [teams, setTeams] = useState([])\r\n  const [leagues, setLeagues] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [selectedLeague, setSelectedLeague] = useState('')\r\n  const [selectedSeason, setSelectedSeason] = useState('2024')\r\n  const [activeTab, setActiveTab] = useState('team')\r\n  const [sortBy, setSortBy] = useState('points')\r\n  const [sortDirection, setSortDirection] = useState('desc')\r\n\r\n  const loadLeagues = useCallback(async () => {\r\n    try {\r\n      const leaguesResponse = await areBetService.getLeagues({ limit: 20 })\r\n      if (leaguesResponse?.response) {\r\n        setLeagues(leaguesResponse.response)\r\n        if (leaguesResponse.response.length > 0 && !selectedLeague) {\r\n          setSelectedLeague(leaguesResponse.response[0].league.id.toString())\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading leagues:', err)\r\n    }\r\n  }, [selectedLeague])\r\n\r\n  const loadTeamStats = useCallback(async () => {\r\n    if (!selectedLeague) return\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      // Get standings which include team stats\r\n      const standingsResponse = await areBetService.getStandings({\r\n        league: parseInt(selectedLeague),\r\n        season: parseInt(selectedSeason)\r\n      })\r\n\r\n      if (standingsResponse?.response?.[0]?.league?.standings?.[0]) {\r\n        setTeams(standingsResponse.response[0].league.standings[0])\r\n      } else {\r\n        setTeams([])\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading team stats:', err)\r\n      setError('Failed to load statistics')\r\n      setTeams([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [selectedLeague, selectedSeason])\r\n\r\n  useEffect(() => {\r\n    loadLeagues()\r\n  }, [loadLeagues])\r\n\r\n  useEffect(() => {\r\n    if (selectedLeague && activeTab === 'team') {\r\n      loadTeamStats()\r\n    }\r\n  }, [loadTeamStats, activeTab, selectedLeague])\r\n\r\n  // Sort teams based on selected criteria\r\n  const sortedTeams = useMemo(() => {\r\n    if (!teams.length) return []\r\n\r\n    return [...teams].sort((a, b) => {\r\n      let aValue, bValue\r\n\r\n      switch (sortBy) {\r\n        case 'points':\r\n          aValue = a.points\r\n          bValue = b.points\r\n          break\r\n        case 'goals_for':\r\n          aValue = a.all.goals.for\r\n          bValue = b.all.goals.for\r\n          break\r\n        case 'goals_against':\r\n          aValue = a.all.goals.against\r\n          bValue = b.all.goals.against\r\n          break\r\n        case 'goal_difference':\r\n          aValue = a.goalsDiff\r\n          bValue = b.goalsDiff\r\n          break\r\n        case 'wins':\r\n          aValue = a.all.win\r\n          bValue = b.all.win\r\n          break\r\n        case 'draws':\r\n          aValue = a.all.draw\r\n          bValue = b.all.draw\r\n          break\r\n        case 'losses':\r\n          aValue = a.all.lose\r\n          bValue = b.all.lose\r\n          break\r\n        case 'played':\r\n          aValue = a.all.played\r\n          bValue = b.all.played\r\n          break\r\n        default:\r\n          aValue = a.points\r\n          bValue = b.points\r\n      }\r\n\r\n      return sortDirection === 'desc' ? bValue - aValue : aValue - bValue\r\n    })\r\n  }, [teams, sortBy, sortDirection])\r\n\r\n  const handleSort = (field) => {\r\n    if (sortBy === field) {\r\n      setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc')\r\n    } else {\r\n      setSortBy(field)\r\n      setSortDirection('desc')\r\n    }\r\n  }\r\n\r\n  const getTopStats = () => {\r\n    if (!teams.length) return {}\r\n\r\n    const topScorer = teams.reduce((max, team) => \r\n      team.all.goals.for > max.all.goals.for ? team : max\r\n    )\r\n    \r\n    const bestDefense = teams.reduce((min, team) => \r\n      team.all.goals.against < min.all.goals.against ? team : min\r\n    )\r\n\r\n    const mostWins = teams.reduce((max, team) => \r\n      team.all.win > max.all.win ? team : max\r\n    )\r\n\r\n    return { topScorer, bestDefense, mostWins }\r\n  }\r\n\r\n  const topStats = getTopStats()\r\n\r\n  return (\r\n    <BackgroundWrapper>\r\n      <Header />\r\n      <main className=\"min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto px-3 sm:px-4 lg:px-6 py-4\">\r\n          {/* Header */}\r\n          <div className=\"mb-6\">\r\n            <h1 className=\"text-2xl font-bold text-visible-strong mb-2\">Statistics</h1>\r\n            <p className=\"text-visible\">Detailed team and player statistics</p>\r\n          </div>\r\n\r\n          {/* Tabs */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"flex space-x-1 bg-gray-800 p-1 rounded-lg w-fit\">\r\n              <button\r\n                onClick={() => setActiveTab('team')}\r\n                className={`px-4 py-2 rounded-md transition-colors text-sm font-medium ${\r\n                  activeTab === 'team'\r\n                    ? 'bg-yellow-500 text-black'\r\n                    : 'text-visible hover:text-yellow-400'\r\n                }`}\r\n              >\r\n                Team Stats\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('player')}\r\n                className={`px-4 py-2 rounded-md transition-colors text-sm font-medium ${\r\n                  activeTab === 'player'\r\n                    ? 'bg-yellow-500 text-black'\r\n                    : 'text-visible hover:text-yellow-400'\r\n                } ${!isPremium ? 'opacity-50' : ''}`}\r\n                disabled={!isPremium}\r\n              >\r\n                Player Stats {!isPremium && '🔒'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <Card className=\"mb-6 p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <select\r\n                value={selectedLeague}\r\n                onChange={(e) => setSelectedLeague(e.target.value)}\r\n                className=\"px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:outline-none text-visible\"\r\n              >\r\n                <option value=\"\">Select League</option>\r\n                {leagues.map(league => (\r\n                  <option key={league.league.id} value={league.league.id.toString()}>\r\n                    {league.league.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              <select\r\n                value={selectedSeason}\r\n                onChange={(e) => setSelectedSeason(e.target.value)}\r\n                className=\"px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:outline-none text-visible\"\r\n              >\r\n                <option value=\"2024\">2024</option>\r\n                <option value=\"2023\">2023</option>\r\n                <option value=\"2022\">2022</option>\r\n              </select>\r\n\r\n              {activeTab === 'team' && (\r\n                <select\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:outline-none text-visible\"\r\n                >\r\n                  <option value=\"points\">Sort by Points</option>\r\n                  <option value=\"goals_for\">Sort by Goals For</option>\r\n                  <option value=\"goals_against\">Sort by Goals Against</option>\r\n                  <option value=\"goal_difference\">Sort by Goal Difference</option>\r\n                  <option value=\"wins\">Sort by Wins</option>\r\n                  <option value=\"draws\">Sort by Draws</option>\r\n                  <option value=\"losses\">Sort by Losses</option>\r\n                </select>\r\n              )}\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Team Stats Tab */}\r\n          {activeTab === 'team' && (\r\n            <>\r\n              {loading ? (\r\n                <div className=\"flex justify-center items-center py-12\">\r\n                  <LoadingSpinner />\r\n                </div>\r\n              ) : error ? (\r\n                <Card className=\"p-8 text-center\">\r\n                  <div className=\"text-red-500 text-visible\">{error}</div>\r\n                  <button\r\n                    onClick={loadTeamStats}\r\n                    className=\"mt-4 px-4 py-2 bg-yellow-500 text-black rounded-lg hover:bg-yellow-400 transition-colors\"\r\n                  >\r\n                    Try Again\r\n                  </button>\r\n                </Card>\r\n              ) : teams.length === 0 ? (\r\n                <Card className=\"p-8 text-center\">\r\n                  <div className=\"text-visible\">No statistics available</div>\r\n                </Card>\r\n              ) : (\r\n                <>\r\n                  {/* Top Stats Cards */}\r\n                  {topStats.topScorer && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                      <Card className=\"p-4 text-center\">\r\n                        <div className=\"text-sm text-visible mb-1\">Top Scorer</div>\r\n                        <div className=\"flex items-center justify-center space-x-2 mb-2\">\r\n                          <img\r\n                            src={topStats.topScorer.team.logo}\r\n                            alt={topStats.topScorer.team.name}\r\n                            className=\"w-6 h-6\"\r\n                          />\r\n                          <span className=\"font-medium text-visible\">{topStats.topScorer.team.name}</span>\r\n                        </div>\r\n                        <div className=\"text-xl font-bold text-yellow-400\">{topStats.topScorer.all.goals.for} goals</div>\r\n                      </Card>\r\n\r\n                      <Card className=\"p-4 text-center\">\r\n                        <div className=\"text-sm text-visible mb-1\">Best Defense</div>\r\n                        <div className=\"flex items-center justify-center space-x-2 mb-2\">\r\n                          <img\r\n                            src={topStats.bestDefense.team.logo}\r\n                            alt={topStats.bestDefense.team.name}\r\n                            className=\"w-6 h-6\"\r\n                          />\r\n                          <span className=\"font-medium text-visible\">{topStats.bestDefense.team.name}</span>\r\n                        </div>\r\n                        <div className=\"text-xl font-bold text-green-400\">{topStats.bestDefense.all.goals.against} goals</div>\r\n                      </Card>\r\n\r\n                      <Card className=\"p-4 text-center\">\r\n                        <div className=\"text-sm text-visible mb-1\">Most Wins</div>\r\n                        <div className=\"flex items-center justify-center space-x-2 mb-2\">\r\n                          <img\r\n                            src={topStats.mostWins.team.logo}\r\n                            alt={topStats.mostWins.team.name}\r\n                            className=\"w-6 h-6\"\r\n                          />\r\n                          <span className=\"font-medium text-visible\">{topStats.mostWins.team.name}</span>\r\n                        </div>\r\n                        <div className=\"text-xl font-bold text-blue-400\">{topStats.mostWins.all.win} wins</div>\r\n                      </Card>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Detailed Stats Table */}\r\n                  <Card className=\"overflow-hidden\">\r\n                    <div className=\"overflow-x-auto\">\r\n                      <table className=\"w-full\">\r\n                        <thead className=\"bg-gray-900\">\r\n                          <tr className=\"border-b border-gray-700\">\r\n                            <th className=\"text-left py-3 px-4 font-semibold text-visible\">Team</th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('played')}\r\n                            >\r\n                              MP {sortBy === 'played' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('wins')}\r\n                            >\r\n                              W {sortBy === 'wins' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('draws')}\r\n                            >\r\n                              D {sortBy === 'draws' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('losses')}\r\n                            >\r\n                              L {sortBy === 'losses' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('goals_for')}\r\n                            >\r\n                              GF {sortBy === 'goals_for' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('goals_against')}\r\n                            >\r\n                              GA {sortBy === 'goals_against' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('goal_difference')}\r\n                            >\r\n                              GD {sortBy === 'goal_difference' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                            <th \r\n                              className=\"text-center py-3 px-2 font-semibold text-visible cursor-pointer hover:text-yellow-400\"\r\n                              onClick={() => handleSort('points')}\r\n                            >\r\n                              Pts {sortBy === 'points' && (sortDirection === 'desc' ? '↓' : '↑')}\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {sortedTeams.map((team, index) => (\r\n                            <tr \r\n                              key={team.team.id}\r\n                              className={`border-b border-gray-700 hover:bg-gray-800 transition-colors ${\r\n                                index % 2 === 0 ? 'bg-gray-900' : 'bg-gray-850'\r\n                              }`}\r\n                            >\r\n                              <td className=\"py-3 px-4\">\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                  <img\r\n                                    src={team.team.logo}\r\n                                    alt={team.team.name}\r\n                                    className=\"w-6 h-6 object-cover rounded\"\r\n                                    onError={(e) => {\r\n                                      e.target.src = '/api/placeholder/24/24'\r\n                                    }}\r\n                                  />\r\n                                  <span className=\"text-visible font-medium\">{team.team.name}</span>\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"py-3 px-2 text-center text-visible\">{team.all.played}</td>\r\n                              <td className=\"py-3 px-2 text-center text-green-400\">{team.all.win}</td>\r\n                              <td className=\"py-3 px-2 text-center text-yellow-400\">{team.all.draw}</td>\r\n                              <td className=\"py-3 px-2 text-center text-red-400\">{team.all.lose}</td>\r\n                              <td className=\"py-3 px-2 text-center text-visible font-semibold\">{team.all.goals.for}</td>\r\n                              <td className=\"py-3 px-2 text-center text-visible font-semibold\">{team.all.goals.against}</td>\r\n                              <td className={`py-3 px-2 text-center font-semibold ${\r\n                                team.goalsDiff > 0 ? 'text-green-400' : \r\n                                team.goalsDiff < 0 ? 'text-red-400' : 'text-visible'\r\n                              }`}>\r\n                                {team.goalsDiff > 0 ? '+' : ''}{team.goalsDiff}\r\n                              </td>\r\n                              <td className=\"py-3 px-2 text-center font-bold text-yellow-400\">{team.points}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Card>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {/* Player Stats Tab */}\r\n          {activeTab === 'player' && (\r\n            <PremiumGate feature=\"player_stats\" title=\"Player Statistics\" description=\"Access detailed player statistics and performance metrics\">\r\n              <Card className=\"p-8 text-center\">\r\n                <div className=\"text-visible\">Player statistics feature coming soon...</div>\r\n                <div className=\"text-sm text-muted mt-2\">Track top scorers, assists, and player performance metrics</div>\r\n              </Card>\r\n            </PremiumGate>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </BackgroundWrapper>\r\n  )\r\n}\r\n\r\nexport default Stats"],"names":["Stats","isPremium","useAuth","teams","setTeams","useState","leagues","setLeagues","loading","setLoading","error","setError","selectedLeague","setSelectedLeague","selectedSeason","setSelectedSeason","activeTab","setActiveTab","sortBy","setSortBy","sortDirection","setSortDirection","loadLeagues","useCallback","async","leaguesResponse","areBetService","getLeagues","limit","response","length","league","id","toString","err","console","loadTeamStats","_standingsResponse$re","_standingsResponse$re2","_standingsResponse$re3","_standingsResponse$re4","standingsResponse","getStandings","parseInt","season","standings","useEffect","sortedTeams","useMemo","sort","a","b","aValue","bValue","points","all","goals","for","against","goalsDiff","win","draw","lose","played","handleSort","field","topStats","getTopStats","topScorer","reduce","max","team","bestDefense","min","mostWins","_jsxs","BackgroundWrapper","children","_jsx","Header","className","onClick","concat","disabled","Card","value","onChange","e","target","map","name","_Fragment","LoadingSpinner","src","logo","alt","index","onError","PremiumGate","feature","title","description"],"sourceRoot":""}