{"version":3,"file":"static/js/724.3c0b67b6.chunk.js","mappings":"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","sources":["features/dashboard/ModernDashboard.js"],"sourcesContent":["// ===============================================\r\n// MODERN DASHBOARD COMPONENT\r\n// Enhanced dashboard with neural network design and subscription features\r\n// ===============================================\r\n\r\nimport React, { useState, useEffect, useCallback, memo, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../shared/hooks/useAuth';\r\nimport { areBetService } from '../../shared/services/SupabaseServiceV2';\r\nimport { \r\n  MatchCard, \r\n  LoadingSpinner, \r\n  Button, \r\n  Card,\r\n  PremiumGate,\r\n  FeatureTeaser,\r\n  BackgroundWrapper,\r\n  ThreeColumnLayout,\r\n  LazyImage\r\n} from '../../shared/components';\r\nimport { DashboardSkeleton } from '../../shared/components/SkeletonLoader';\r\n\r\nconst getTodayDateString = () => {\r\n  return new Date().toISOString().split('T')[0];\r\n};\r\n\r\nconst ModernDashboard = () => {\r\n  const { isPremium, hasFeature } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [matches, setMatches] = useState([]);\r\n  const [liveMatches, setLiveMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDate] = useState(getTodayDateString());\r\n  const [activeTab, setActiveTab] = useState('live');\r\n\r\n  const loadMatches = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Load both live and date-based matches\r\n      const [liveResponse, fixturesResponse] = await Promise.allSettled([\r\n        areBetService.getLiveFixtures(),\r\n        areBetService.getFixtures({ date: selectedDate, limit: 20 })\r\n      ]);\r\n\r\n      // Handle live matches\r\n      if (liveResponse.status === 'fulfilled' && liveResponse.value?.response) {\r\n        setLiveMatches(liveResponse.value.response);\r\n      } else {\r\n        setLiveMatches([]);\r\n      }\r\n\r\n      // Handle fixtures\r\n      if (fixturesResponse.status === 'fulfilled' && fixturesResponse.value?.response) {\r\n        setMatches(fixturesResponse.value.response);\r\n      } else {\r\n        setMatches([]);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error loading matches:', err);\r\n      setError('Failed to load matches. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    loadMatches();\r\n    \r\n    // Auto-refresh every 30 seconds for live matches\r\n    const interval = setInterval(loadMatches, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [loadMatches]);\r\n\r\n  const handleMatchClick = useCallback((match) => {\r\n    // Navigate to match detail page using React Router\r\n    navigate(`/match/${match.fixture.id}`);\r\n  }, [navigate]);\r\n\r\n  // Memoize expensive filtering operations\r\n  const displayMatches = useMemo(() => {\r\n    const todayString = getTodayDateString();\r\n    const now = new Date();\r\n    \r\n    switch (activeTab) {\r\n      case 'live':\r\n        return liveMatches;\r\n      case 'today':\r\n        return matches.filter(m => {\r\n          const matchDate = new Date(m.fixture.date).toISOString().split('T')[0];\r\n          return matchDate === todayString;\r\n        });\r\n      case 'upcoming':\r\n        return matches.filter(m => {\r\n          const matchDate = new Date(m.fixture.date);\r\n          return matchDate > now;\r\n        });\r\n      default:\r\n        return matches;\r\n    }\r\n  }, [activeTab, liveMatches, matches]);\r\n\r\n  // Memoize tab counts\r\n  const tabCounts = useMemo(() => {\r\n    const now = new Date();\r\n    \r\n    return {\r\n      live: liveMatches.length,\r\n      today: matches.filter(m => new Date(m.fixture.date).toDateString() === new Date().toDateString()).length,\r\n      upcoming: matches.filter(m => new Date(m.fixture.date) > now).length\r\n    };\r\n  }, [liveMatches, matches]);\r\n\r\n  // Combine all matches for search - moved before conditional return\r\n  const allMatches = useMemo(() => [\r\n    ...liveMatches,\r\n    ...matches\r\n  ], [liveMatches, matches]);\r\n\r\n  // Prepare tabs data\r\n  const tabsData = [\r\n    { id: 'live', label: 'Live Now', count: tabCounts.live, icon: '🔴' },\r\n    { id: 'today', label: \"Today's Matches\", count: tabCounts.today, icon: '📅' },\r\n    { id: 'upcoming', label: 'Upcoming', count: tabCounts.upcoming, icon: '⏰' }\r\n  ];\r\n\r\n  if (loading && matches.length === 0) {\r\n    return (\r\n      <BackgroundWrapper>\r\n        <ThreeColumnLayout \r\n          matches={allMatches}\r\n          title=\"Sports Intelligence Dashboard\"\r\n          subtitle=\"AI-powered insights and predictions for smarter betting decisions\"\r\n        >\r\n          <DashboardSkeleton />\r\n        </ThreeColumnLayout>\r\n      </BackgroundWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BackgroundWrapper>\r\n      <ThreeColumnLayout\r\n        matches={allMatches}\r\n        title=\"Sports Intelligence Dashboard\"\r\n        subtitle=\"AI-powered insights and predictions for smarter betting decisions\"\r\n        tabs={tabsData}\r\n        activeTab={activeTab}\r\n        onTabChange={setActiveTab}\r\n      >\r\n        {/* Premium Features Preview */}\r\n        {!isPremium && (\r\n          <div className=\"mb-8\">\r\n            <FeatureTeaser\r\n              feature=\"predictions\"\r\n              title=\"AI Match Predictions\"\r\n              description=\"Confidence-scored predictions with neural network analysis\"\r\n              requiredTier=\"pro\"\r\n              className=\"mb-4\"\r\n            />\r\n            <FeatureTeaser\r\n              feature=\"value_bets\"\r\n              title=\"Value Bet Detection\"\r\n              description=\"Mathematically advantageous betting opportunities\"\r\n              requiredTier=\"elite\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Compact Error Message */}\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-900/20 border border-red-500/30 rounded-lg\">\r\n            <p className=\"text-red-300 text-sm\">{error}</p>\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"small\" \r\n              onClick={loadMatches}\r\n              className=\"mt-2 text-xs\"\r\n            >\r\n              Try Again\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Matches Grid */}\r\n        {displayMatches.length > 0 ? (\r\n          <div className=\"space-y-8 fade-in-stagger\">\r\n            {/* Group matches by league */}\r\n            {Object.entries(\r\n              displayMatches.reduce((groups, match) => {\r\n                const league = match.league?.name || 'Unknown League';\r\n                if (!groups[league]) {\r\n                  groups[league] = [];\r\n                }\r\n                groups[league].push(match);\r\n                return groups;\r\n              }, {})\r\n            ).map(([leagueName, leagueMatches]) => (\r\n              <div key={leagueName} className=\"space-y-6\">\r\n                {/* Enhanced League Header */}\r\n                <div className=\"league-header-pro\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <LazyImage\r\n                        src={leagueMatches[0]?.league?.logo || '/api/placeholder/24/24'}\r\n                        alt={leagueName}\r\n                        width=\"24px\"\r\n                        height=\"24px\"\r\n                        className=\"rounded\"\r\n                        fallbackSrc=\"/api/placeholder/24/24\"\r\n                      />\r\n                      <h2 className=\"league-title-pro\">{leagueName}</h2>\r\n                      <span className=\"px-3 py-1 bg-yellow-500 text-black rounded-full text-sm font-semibold\">\r\n                        {leagueMatches.length}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-400\">\r\n                      {leagueMatches[0]?.league?.country || 'International'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Matches Grid */}\r\n                <div className=\"content-grid\">\r\n                  {leagueMatches.map((match) => (\r\n                    <MatchCard\r\n                      key={match.fixture.id}\r\n                      match={match}\r\n                      showPredictions={isPremium || hasFeature('predictions')}\r\n                      showAdvancedStats={hasFeature('advanced_stats')}\r\n                      onClick={() => handleMatchClick(match)}\r\n                      className=\"transform transition-all duration-300 hover:scale-102\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <Card className=\"text-center py-16\">\r\n            <div className=\"text-6xl mb-6\">⚽</div>\r\n            <h3 className=\"text-2xl font-semibold text-gray-900 mb-3\">\r\n              {activeTab === 'live' ? 'No Live Matches' : 'No Matches Found'}\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              {activeTab === 'live' \r\n                ? 'Check back later for live matches or browse upcoming fixtures.'\r\n                : 'Try selecting a different date or check back later.'\r\n              }\r\n            </p>\r\n            <Button \r\n              variant=\"primary\"\r\n              onClick={() => setActiveTab('today')}\r\n            >\r\n              View Today's Matches\r\n            </Button>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Premium CTA Section */}\r\n        {!isPremium && (\r\n          <div className=\"mt-12\">\r\n            <PremiumGate\r\n              feature=\"predictions\"\r\n              title=\"Unlock Premium Insights\"\r\n              description=\"Get access to AI predictions, advanced analytics, and value bet detection\"\r\n              className=\"max-w-2xl mx-auto\"\r\n            >\r\n              <div className=\"p-8 bg-gradient-to-r from-indigo-600 to-cyan-600 rounded-xl text-white\">\r\n                <h3 className=\"text-2xl font-bold mb-4\">Premium Features</h3>\r\n                <ul className=\"space-y-2\">\r\n                  <li>• AI-powered match predictions</li>\r\n                  <li>• Advanced team analytics</li>\r\n                  <li>• Real-time notifications</li>\r\n                  <li>• Historical trend analysis</li>\r\n                </ul>\r\n              </div>\r\n            </PremiumGate>\r\n          </div>\r\n        )}\r\n      </ThreeColumnLayout>\r\n    </BackgroundWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(ModernDashboard);"],"names":["getTodayDateString","Date","toISOString","split","ModernDashboard","isPremium","hasFeature","useAuth","navigate","useNavigate","matches","setMatches","useState","liveMatches","setLiveMatches","loading","setLoading","error","setError","selectedDate","activeTab","setActiveTab","loadMatches","useCallback","async","_liveResponse$value","_fixturesResponse$val","liveResponse","fixturesResponse","Promise","allSettled","areBetService","getLiveFixtures","getFixtures","date","limit","status","value","response","err","console","useEffect","interval","setInterval","clearInterval","handleMatchClick","match","concat","fixture","id","displayMatches","useMemo","todayString","now","filter","m","tabCounts","live","length","today","toDateString","upcoming","allMatches","tabsData","label","count","icon","_jsx","BackgroundWrapper","children","ThreeColumnLayout","title","subtitle","DashboardSkeleton","_jsxs","tabs","onTabChange","className","FeatureTeaser","feature","description","requiredTier","Button","variant","size","onClick","Object","entries","reduce","groups","_match$league","league","name","push","map","_ref","_leagueMatches$","_leagueMatches$$leagu","_leagueMatches$2","_leagueMatches$2$leag","leagueName","leagueMatches","LazyImage","src","logo","alt","width","height","fallbackSrc","country","MatchCard","showPredictions","showAdvancedStats","Card","PremiumGate","memo"],"sourceRoot":""}